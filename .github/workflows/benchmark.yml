# Thanks to Rome! https://github.com/rome/tools/blob/main/.github/workflows/bench_parser.yml

name: Benchmark
on:
  issue_comment:
    types: [created]
  pull_request:
env:
  RUST_LOG: info
jobs:
  bench:
    name: Bench
    # if: github.event.issue.pull_request && contains(github.event.comment.body, '!benchmark')
    runs-on: ubuntu-latest
    steps:
      # Run on base first to get a baseline
      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.64.0
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - name: Build crates
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Run benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: bench
          args: |
            --workspace --bench dep_graph_benchmark --bench emitter_benchmark --bench project_graph_benchmark --bench runner_benchmark -- --save-baseline base-sha

      # Run on head second
      - name: Checkout head branch
        uses: actions/checkout@v3
        with:
          clean: false
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: bench
          args: |
            --workspace --bench dep_graph_benchmark --bench emitter_benchmark --bench project_graph_benchmark --bench runner_benchmark -- --save-baseline head-sha

      # Compare diffs
      - name: Install critcmp
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: critcmp

      - name: Compare benchmarks
        id: bench_comparison
        shell: bash
        run: |
          echo "### Benchmark results" > output
          echo "\`\`\`" >> output
          critcmp base-sha head-sha >> output
          echo "\`\`\`" >> output
          cat output
          comment="$(cat output)"
          comment="${comment//'%'/'%25'}"
          comment="${comment//$'\n'/'%0A'}"
          comment="${comment//$'\r'/'%0D'}"
          echo "comment=$comment" >> $GITHUB_OUTPUT

      - name: Add comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        continue-on-error: true
        with:
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.bench_comparison.outputs.comment }}

      - name: Remove artifacts
        run: rm -rf ./target/criterion
