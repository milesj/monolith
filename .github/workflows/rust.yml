name: Rust
on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - .github/workflows/rust.yml
      - crates/**
      - tests/**
      - Cargo.lock
      - Cargo.toml
      - Makefile.toml
      - rust-toolchain.toml
jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Cache cargo
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.61.0
          profile: minimal
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --force cargo-make
      - uses: actions-rs/cargo@v1
        with:
          command: make
          args: format
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Cache cargo
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.61.0
          profile: minimal
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --force cargo-make
      - uses: actions-rs/cargo@v1
        with:
          command: make
          args: lint
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Cache cargo
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.61.0
          profile: minimal
          components: llvm-tools-preview
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --force cargo-make grcov
      - uses: actions-rs/cargo@v1
        with:
          command: make
          args: test-coverage
      # Windows fails to compile right now...
      - name: Generate code coverage
        if: ${{ matrix.os != 'windows-latest' }}
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: generate-report
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.os != 'windows-latest' }}
        name: Upload coverage report
        with:
          name: coverage-${{ matrix.os }}
          path: ./coverage/report.txt
          if-no-files-found: error
  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/download-artifact@v2
        name: Download coverage reports
        with:
          path: coverage
      - uses: codecov/codecov-action@v3
        name: Upload to Codecov
        with:
          files: ./coverage/coverage-ubuntu-latest/report.txt,./coverage/coverage-macos-latest/report.txt
          flags: rust
          verbose: true
