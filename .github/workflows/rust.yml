name: Rust
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  rust_check:
    runs-on: ubuntu-latest
    outputs:
      affected: ${{ steps.filter.outputs.affected }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            affected:
              - crates/**
              - tests/**
              - Cargo.lock
              - Cargo.toml
              - Makefile.toml
              - rust-toolchain.toml
  format:
    needs: rust_check
    if: ${{ steps.rust_check.outputs.affected == 'true' }}
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Cache cargo
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          profile: minimal
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --force cargo-make
      - uses: actions-rs/cargo@v1
        with:
          command: make
          args: format
  lint:
    needs: rust_check
    if: ${{ steps.rust_check.outputs.affected == 'true' }}
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Cache cargo
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          profile: minimal
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --force cargo-make
      - uses: actions-rs/cargo@v1
        with:
          command: make
          args: lint
  test:
    needs: rust_check
    if: ${{ steps.rust_check.outputs.affected == 'true' }}
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Cache cargo
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          profile: minimal
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --force cargo-make
      - uses: actions-rs/cargo@v1
        with:
          command: build
      - uses: actions-rs/cargo@v1
        with:
          command: make
          args: test
