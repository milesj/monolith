name: Rust
on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - .cargo/config.toml
      - .github/workflows/rust.yml
      - crates/**
      - nextgen/**
      - tests/**
      - Cargo.lock
      - Cargo.toml
      - Makefile.toml
      - rust-toolchain.toml

env:
  # sccache
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  RUSTC_WRAPPER: sccache
  # RUST_LOG: trace
  SCCACHE_BUCKET: moon-ci-sccache
  # SCCACHE_LOG: debug
  # SCCACHE_NO_DAEMON: 1
  SCCACHE_REGION: us-east-2
  SCCACHE_S3_SERVER_SIDE_ENCRYPTION: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: just
          cache: false
          components: rustfmt
      - name: Check formatting
        run: just format-check
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: just
          cache-base: '^(master|develop-)'
          components: clippy
      - uses: mozilla-actions/sccache-action@v0.0.3
      - name: Run linter
        run: just lint
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [buildjet-8vcpu-ubuntu-2204, self-hosted-laptop-macos-m1, self-hosted-laptop-windows-i7]
      fail-fast: false
    env:
      WITH_COVERAGE:
        ${{ github.event_name == 'push' && contains(github.ref, 'develop-') || github.ref_name ==
        'master' }}
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          bins: just, cargo-nextest, cargo-llvm-cov
          cache-base: '^(master|develop-)'
          components: llvm-tools-preview
      - uses: moonrepo/setup-toolchain@v0
        if: ${{ runner.os == 'Linux' }}
        with:
          auto-install: true
          proto-version: '0.24.2' # Keep in sync
      - uses: mozilla-actions/sccache-action@v0.0.3
      - name: Run tests
        if: ${{ env.WITH_COVERAGE == 'false' }}
        run: just test-ci
      - name: Run tests with coverage
        if: ${{ env.WITH_COVERAGE == 'true' }}
        run: just cov-ci
      - name: Generate code coverage
        if: ${{ env.WITH_COVERAGE == 'true' }}
        run: just gen-report
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        if: ${{ env.WITH_COVERAGE == 'true' }}
        with:
          name: coverage-${{ runner.os }}
          path: ./report.txt
          if-no-files-found: error
  coverage:
    if:
      ${{ github.event_name == 'push' && contains(github.ref, 'develop-') || github.ref_name ==
      'master' }}
    name: Code coverage
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        name: Download coverage reports
        with:
          path: coverage
      - uses: codecov/codecov-action@v3
        name: Upload to Codecov
        with:
          files: ./coverage/coverage-Linux/report.txt,./coverage/coverage-macOS/report.txt,./coverage/coverage-Windows/report.txt
          flags: rust
          verbose: true
