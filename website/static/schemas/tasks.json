{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PartialInheritedTasksConfig",
  "description": "Configures tasks and task related settings that'll be inherited by all matching projects. Docs: https://moonrepo.dev/docs/config/tasks",
  "type": "object",
  "properties": {
    "$schema": {
      "default": "https://moonrepo.dev/schemas/tasks.json",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "extends": {
      "description": "Extends another tasks configuration file. Supports a relative file path or a secure URL.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "fileGroups": {
      "description": "A mapping of group IDs to a list of file paths, globs, and environment variables, that can be referenced from tasks.",
      "anyOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "propertyNames": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "implicitDeps": {
      "description": "Task dependencies that'll automatically be injected into every task that inherits this configuration.",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartialTaskDependency"
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "implicitInputs": {
      "description": "Task inputs that'll automatically be injected into every task that inherits this configuration.",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "taskOptions": {
      "description": "Default task options for all inherited tasks.",
      "anyOf": [
        {
          "$ref": "#/definitions/PartialTaskOptionsConfig"
        },
        {
          "type": "null"
        }
      ]
    },
    "tasks": {
      "description": "A mapping of tasks by ID to parameters required for running the task.",
      "anyOf": [
        {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PartialTaskConfig"
          },
          "propertyNames": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "PartialTaskArgs": {
      "title": "PartialTaskArgs",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "PartialTaskConfig": {
      "title": "PartialTaskConfig",
      "description": "Configures a task to be ran within the action pipeline.",
      "type": "object",
      "properties": {
        "args": {
          "description": "Arguments to pass to the command when it's ran. Can be defined as a string, or a list of individual arguments.",
          "anyOf": [
            {
              "$ref": "#/definitions/PartialTaskArgs"
            },
            {
              "type": "null"
            }
          ]
        },
        "command": {
          "description": "The command or command line to execute when the task is ran. Supports the command name, with or without arguments. Can be defined as a string, or a list of individual arguments.",
          "anyOf": [
            {
              "$ref": "#/definitions/PartialTaskArgs"
            },
            {
              "type": "null"
            }
          ]
        },
        "deps": {
          "description": "Other tasks that this task depends on, and must run to completion, before this task is ran. Can depend on sibling tasks, or tasks in other projects, using targets.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PartialTaskDependency"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "env": {
          "description": "A mapping of environment variables that will be set when the task is ran.",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "propertyNames": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "extends": {
          "description": "Extends settings from a sibling task by ID.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "inputs": {
          "description": "Inputs and sources that will mark the task as affected when comparing against touched files. When not provided, all files within the project are considered an input. When an empty list, no files are considered. Otherwise, an explicit list of inputs are considered.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "local": {
          "description": "Marks the task as local only. Local tasks do not run in CI, do not have `options.cache` enabled, and are marked as `options.persistent`.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "options": {
          "description": "Options to control task inheritance and execution.",
          "anyOf": [
            {
              "$ref": "#/definitions/PartialTaskOptionsConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "outputs": {
          "description": "Outputs that will be created when the task has successfully ran. When `cache` is enabled, the outputs will be persisted for subsequent runs.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "platform": {
          "description": "The platform in which the task will be ran in. The platform determines available binaries, lookup paths, and more. When not provided, will be automatically detected.",
          "default": "unknown",
          "anyOf": [
            {
              "$ref": "#/definitions/PlatformType"
            },
            {
              "type": "null"
            }
          ]
        },
        "type": {
          "description": "The type of task, primarily used for categorical reasons. When not provided, will be automatically determined.",
          "default": "test",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskType"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "PartialTaskDependency": {
      "title": "PartialTaskDependency",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/PartialTaskDependencyConfig"
        }
      ]
    },
    "PartialTaskDependencyConfig": {
      "title": "PartialTaskDependencyConfig",
      "description": "Expanded information about a task dependency.",
      "type": "object",
      "properties": {
        "args": {
          "description": "Additional arguments to pass to this dependency when it's ran.",
          "anyOf": [
            {
              "$ref": "#/definitions/PartialTaskArgs"
            },
            {
              "type": "null"
            }
          ]
        },
        "env": {
          "description": "A mapping of environment variables specific to this dependency.",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "propertyNames": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "optional": {
          "description": "Marks the dependency is optional when being inherited from the top-level.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "target": {
          "description": "The target of the depended on task.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "PartialTaskOptionsConfig": {
      "title": "PartialTaskOptionsConfig",
      "description": "Options to control task inheritance and execution.",
      "type": "object",
      "properties": {
        "affectedFiles": {
          "description": "The pattern in which affected files will be passed to the task.",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskOptionAffectedFiles"
            },
            {
              "type": "null"
            }
          ]
        },
        "allowFailure": {
          "description": "Allows the task to fail without failing the entire pipeline.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "cache": {
          "description": "Caches the `outputs` of the task",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "envFile": {
          "description": "Loads and sets environment variables from the `.env` file when running the task.",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskOptionEnvFile"
            },
            {
              "type": "null"
            }
          ]
        },
        "interactive": {
          "description": "Marks the task as interactive, so that it will run in isolation, and have direct access to stdin.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "mergeArgs": {
          "description": "The strategy to use when merging `args` with an inherited task.",
          "default": "append",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskMergeStrategy"
            },
            {
              "type": "null"
            }
          ]
        },
        "mergeDeps": {
          "description": "The strategy to use when merging `deps` with an inherited task.",
          "default": "append",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskMergeStrategy"
            },
            {
              "type": "null"
            }
          ]
        },
        "mergeEnv": {
          "description": "The strategy to use when merging `env` with an inherited task.",
          "default": "append",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskMergeStrategy"
            },
            {
              "type": "null"
            }
          ]
        },
        "mergeInputs": {
          "description": "The strategy to use when merging `inputs` with an inherited task.",
          "default": "append",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskMergeStrategy"
            },
            {
              "type": "null"
            }
          ]
        },
        "mergeOutputs": {
          "description": "The strategy to use when merging `outputs` with an inherited task.",
          "default": "append",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskMergeStrategy"
            },
            {
              "type": "null"
            }
          ]
        },
        "outputStyle": {
          "description": "The style in which task output will be printed to the console.",
          "default": "buffer",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskOutputStyle"
            },
            {
              "type": "null"
            }
          ]
        },
        "persistent": {
          "description": "Marks the task as persistent (continuously running). This is ideal for watchers, servers, or never-ending processes.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "retryCount": {
          "description": "The number of times a failing task will be retried to succeed.",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ]
        },
        "runDepsInParallel": {
          "description": "Runs direct task dependencies (via `deps`) in sequential order. This _does not_ apply to indirect or transient dependencies.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "runFromWorkspaceRoot": {
          "description": "Runs the task from the workspace root, instead of the project root.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "runInCI": {
          "description": "Whether to run the task in CI or not, when executing `moon ci`.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "shell": {
          "description": "Runs the task within a shell. When not defined, runs the task directly while relying on `PATH` resolution.",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ]
        },
        "unixShell": {
          "description": "The shell to run the task in when on a Unix-based machine.",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskUnixShell"
            },
            {
              "type": "null"
            }
          ]
        },
        "windowsShell": {
          "description": "The shell to run the task in when on a Windows machine.",
          "anyOf": [
            {
              "$ref": "#/definitions/TaskWindowsShell"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "PlatformType": {
      "title": "PlatformType",
      "type": "string",
      "enum": [
        "bun",
        "deno",
        "node",
        "rust",
        "system",
        "unknown"
      ]
    },
    "TaskMergeStrategy": {
      "title": "TaskMergeStrategy",
      "type": "string",
      "enum": [
        "append",
        "prepend",
        "replace"
      ]
    },
    "TaskOptionAffectedFiles": {
      "title": "TaskOptionAffectedFiles",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string",
          "enum": [
            "args",
            "env"
          ]
        }
      ]
    },
    "TaskOptionEnvFile": {
      "title": "TaskOptionEnvFile",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ]
    },
    "TaskOutputStyle": {
      "title": "TaskOutputStyle",
      "type": "string",
      "enum": [
        "buffer",
        "buffer-only-failure",
        "hash",
        "none",
        "stream"
      ]
    },
    "TaskType": {
      "title": "TaskType",
      "type": "string",
      "enum": [
        "build",
        "run",
        "test"
      ]
    },
    "TaskUnixShell": {
      "title": "TaskUnixShell",
      "type": "string",
      "enum": [
        "bash",
        "elvish",
        "fish",
        "zsh"
      ]
    },
    "TaskWindowsShell": {
      "title": "TaskWindowsShell",
      "type": "string",
      "enum": [
        "bash",
        "pwsh"
      ]
    }
  }
}
