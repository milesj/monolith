diff --git a/src/theme-classic.d.ts b/src/theme-classic.d.ts
index eac330fc4e6d7e58bf9c47a28acae94f02e5ac71..cceae6099426acb43e217f71eb3d94e81596a46e 100644
--- a/src/theme-classic.d.ts
+++ b/src/theme-classic.d.ts
@@ -20,8 +20,8 @@
 // our theme shadowingâ€”we probably need the user to specify multiple theme paths
 // in their tsconfig.
 
-declare module '@docusaurus/theme-classic' {
-  import type {LoadContext, Plugin, PluginModule} from '@docusaurus/types';
+declare module "@docusaurus/theme-classic" {
+  import type { LoadContext, Plugin, PluginModule } from "@docusaurus/types";
 
   export type PluginOptions = {
     customCss: string[];
@@ -31,52 +31,52 @@ declare module '@docusaurus/theme-classic' {
     customCss?: string[] | string;
   };
 
-  export const getSwizzleConfig: PluginModule['getSwizzleConfig'];
+  export const getSwizzleConfig: PluginModule["getSwizzleConfig"];
 
   export default function themeClassic(
     context: LoadContext,
-    options: Options,
+    options: Options
   ): Plugin<undefined>;
 }
 
-declare module '@theme/Admonition' {
-  import type {ReactNode} from 'react';
+declare module "@theme/Admonition" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     readonly children: ReactNode;
-    readonly type: 'note' | 'tip' | 'danger' | 'info' | 'caution';
+    readonly type: "note" | "tip" | "danger" | "info" | "caution";
     readonly icon?: ReactNode;
     readonly title?: ReactNode;
   }
   export default function Admonition(props: Props): JSX.Element;
 }
 
-declare module '@theme/AnnouncementBar' {
+declare module "@theme/AnnouncementBar" {
   export default function AnnouncementBar(): JSX.Element | null;
 }
 
-declare module '@theme/AnnouncementBar/Content' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/AnnouncementBar/Content" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'div'> {}
+  export interface Props extends ComponentProps<"div"> {}
 
   export default function AnnouncementBarContent(props: Props): JSX.Element;
 }
 
-declare module '@theme/AnnouncementBar/CloseButton' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/AnnouncementBar/CloseButton" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'button'> {}
+  export interface Props extends ComponentProps<"button"> {}
 
   export default function AnnouncementBarCloseButton(props: Props): JSX.Element;
 }
 
-declare module '@theme/BackToTopButton' {
+declare module "@theme/BackToTopButton" {
   export default function BackToTopButton(): JSX.Element;
 }
 
-declare module '@theme/BlogListPaginator' {
-  import type {BlogPaginatedMetadata} from '@docusaurus/plugin-content-blog';
+declare module "@theme/BlogListPaginator" {
+  import type { BlogPaginatedMetadata } from "@docusaurus/plugin-content-blog";
 
   export interface Props {
     readonly metadata: BlogPaginatedMetadata;
@@ -84,8 +84,8 @@ declare module '@theme/BlogListPaginator' {
   export default function BlogListPaginator(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogSidebar/Desktop' {
-  import type {BlogSidebar} from '@docusaurus/plugin-content-blog';
+declare module "@theme/BlogSidebar/Desktop" {
+  import type { BlogSidebar } from "@docusaurus/plugin-content-blog";
 
   export interface Props {
     readonly sidebar: BlogSidebar;
@@ -94,8 +94,8 @@ declare module '@theme/BlogSidebar/Desktop' {
   export default function BlogSidebarDesktop(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogSidebar/Mobile' {
-  import type {BlogSidebar} from '@docusaurus/plugin-content-blog';
+declare module "@theme/BlogSidebar/Mobile" {
+  import type { BlogSidebar } from "@docusaurus/plugin-content-blog";
 
   export interface Props {
     readonly sidebar: BlogSidebar;
@@ -104,8 +104,8 @@ declare module '@theme/BlogSidebar/Mobile' {
   export default function BlogSidebarMobile(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogSidebar' {
-  import type {BlogSidebar} from '@docusaurus/plugin-content-blog';
+declare module "@theme/BlogSidebar" {
+  import type { BlogSidebar } from "@docusaurus/plugin-content-blog";
 
   export interface Props {
     readonly sidebar?: BlogSidebar;
@@ -114,8 +114,8 @@ declare module '@theme/BlogSidebar' {
   export default function BlogSidebar(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem' {
-  import type {ReactNode} from 'react';
+declare module "@theme/BlogPostItem" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     children: ReactNode;
@@ -125,20 +125,20 @@ declare module '@theme/BlogPostItem' {
   export default function BlogPostItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogPostItems' {
-  import type {ComponentType, ReactNode} from 'react';
-  import type {PropBlogPostContent} from '@docusaurus/plugin-content-blog';
+declare module "@theme/BlogPostItems" {
+  import type { ComponentType, ReactNode } from "react";
+  import type { PropBlogPostContent } from "@docusaurus/plugin-content-blog";
 
   export interface Props {
-    items: readonly {content: PropBlogPostContent}[];
-    component?: ComponentType<{children: ReactNode}>;
+    items: readonly { content: PropBlogPostContent }[];
+    component?: ComponentType<{ children: ReactNode }>;
   }
 
   export default function BlogPostItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem/Container' {
-  import type {ReactNode} from 'react';
+declare module "@theme/BlogPostItem/Container" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     children: ReactNode;
@@ -148,11 +148,11 @@ declare module '@theme/BlogPostItem/Container' {
   export default function BlogPostItemContainer(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem/Header' {
+declare module "@theme/BlogPostItem/Header" {
   export default function BlogPostItemHeader(): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem/Header/Title' {
+declare module "@theme/BlogPostItem/Header/Title" {
   export interface Props {
     className?: string;
   }
@@ -160,7 +160,7 @@ declare module '@theme/BlogPostItem/Header/Title' {
   export default function BlogPostItemHeaderTitle(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem/Header/Info' {
+declare module "@theme/BlogPostItem/Header/Info" {
   export interface Props {
     className?: string;
   }
@@ -168,18 +168,18 @@ declare module '@theme/BlogPostItem/Header/Info' {
   export default function BlogPostItemHeaderInfo(): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem/Header/Author' {
-  import type {PropBlogPostContent} from '@docusaurus/plugin-content-blog';
+declare module "@theme/BlogPostItem/Header/Author" {
+  import type { PropBlogPostContent } from "@docusaurus/plugin-content-blog";
 
   export interface Props {
-    readonly author: PropBlogPostContent['metadata']['authors'][number];
+    readonly author: PropBlogPostContent["metadata"]["authors"][number];
     readonly className?: string;
   }
 
   export default function BlogPostItemHeaderAuthor(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem/Header/Authors' {
+declare module "@theme/BlogPostItem/Header/Authors" {
   export interface Props {
     readonly className?: string;
   }
@@ -187,8 +187,8 @@ declare module '@theme/BlogPostItem/Header/Authors' {
   export default function BlogPostItemHeaderAuthors(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem/Content' {
-  import type {ReactNode} from 'react';
+declare module "@theme/BlogPostItem/Content" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     children: ReactNode;
@@ -198,24 +198,24 @@ declare module '@theme/BlogPostItem/Content' {
   export default function BlogPostItemContent(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogPostItem/Footer' {
+declare module "@theme/BlogPostItem/Footer" {
   export default function BlogPostItemFooter(): JSX.Element | null;
 }
 
-declare module '@theme/BlogPostItem/Footer/ReadMoreLink' {
-  import type {Props as LinkProps} from '@docusaurus/Link';
+declare module "@theme/BlogPostItem/Footer/ReadMoreLink" {
+  import type { Props as LinkProps } from "@docusaurus/Link";
 
   export type Props = LinkProps & {
     blogPostTitle: string;
   };
 
   export default function BlogPostItemFooterReadMoreLink(
-    props: Props,
+    props: Props
   ): JSX.Element | null;
 }
 
-declare module '@theme/BlogPostPaginator' {
-  type Item = {readonly title: string; readonly permalink: string};
+declare module "@theme/BlogPostPaginator" {
+  type Item = { readonly title: string; readonly permalink: string };
 
   export interface Props {
     readonly nextItem?: Item;
@@ -225,10 +225,10 @@ declare module '@theme/BlogPostPaginator' {
   export default function BlogPostPaginator(props: Props): JSX.Element;
 }
 
-declare module '@theme/BlogLayout' {
-  import type {ReactNode} from 'react';
-  import type {Props as LayoutProps} from '@theme/Layout';
-  import type {BlogSidebar} from '@docusaurus/plugin-content-blog';
+declare module "@theme/BlogLayout" {
+  import type { ReactNode } from "react";
+  import type { Props as LayoutProps } from "@theme/Layout";
+  import type { BlogSidebar } from "@docusaurus/plugin-content-blog";
 
   export interface Props extends LayoutProps {
     readonly sidebar?: BlogSidebar;
@@ -238,8 +238,8 @@ declare module '@theme/BlogLayout' {
   export default function BlogLayout(props: Props): JSX.Element;
 }
 
-declare module '@theme/CodeBlock' {
-  import type {ReactNode} from 'react';
+declare module "@theme/CodeBlock" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     readonly children: ReactNode;
@@ -253,7 +253,7 @@ declare module '@theme/CodeBlock' {
   export default function CodeBlock(props: Props): JSX.Element;
 }
 
-declare module '@theme/CodeBlock/CopyButton' {
+declare module "@theme/CodeBlock/CopyButton" {
   export interface Props {
     readonly code: string;
     readonly className?: string;
@@ -262,44 +262,44 @@ declare module '@theme/CodeBlock/CopyButton' {
   export default function CopyButton(props: Props): JSX.Element;
 }
 
-declare module '@theme/CodeBlock/Container' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/CodeBlock/Container" {
+  import type { ComponentProps } from "react";
 
-  export default function CodeBlockContainer<T extends 'div' | 'pre'>({
+  export default function CodeBlockContainer<T extends "div" | "pre">({
     as: As,
     ...props
-  }: {as: T} & ComponentProps<T>): JSX.Element;
+  }: { as: T } & ComponentProps<T>): JSX.Element;
 }
 
-declare module '@theme/CodeBlock/Content/Element' {
-  import type {Props} from '@theme/CodeBlock';
+declare module "@theme/CodeBlock/Content/Element" {
+  import type { Props } from "@theme/CodeBlock";
 
-  export type {Props};
+  export type { Props };
 
   export default function CodeBlockElementContent(props: Props): JSX.Element;
 }
 
-declare module '@theme/CodeBlock/Content/String' {
-  import type {Props as CodeBlockProps} from '@theme/CodeBlock';
+declare module "@theme/CodeBlock/Content/String" {
+  import type { Props as CodeBlockProps } from "@theme/CodeBlock";
 
-  export interface Props extends Omit<CodeBlockProps, 'children'> {
+  export interface Props extends Omit<CodeBlockProps, "children"> {
     readonly children: string;
   }
 
   export default function CodeBlockStringContent(props: Props): JSX.Element;
 }
 
-declare module '@theme/CodeBlock/Line' {
-  import type {ComponentProps} from 'react';
-  import type Highlight from 'prism-react-renderer';
+declare module "@theme/CodeBlock/Line" {
+  import type { ComponentProps } from "react";
+  import type Highlight from "prism-react-renderer";
 
   // Lib does not make this easy
   type RenderProps = Parameters<
-    ComponentProps<typeof Highlight>['children']
+    ComponentProps<typeof Highlight>["children"]
   >[0];
-  type GetLineProps = RenderProps['getLineProps'];
-  type GetTokenProps = RenderProps['getTokenProps'];
-  type Token = RenderProps['tokens'][number][number];
+  type GetLineProps = RenderProps["getLineProps"];
+  type GetTokenProps = RenderProps["getTokenProps"];
+  type Token = RenderProps["tokens"][number][number];
 
   export interface Props {
     readonly line: Token[];
@@ -312,7 +312,7 @@ declare module '@theme/CodeBlock/Line' {
   export default function CodeBlockLine(props: Props): JSX.Element;
 }
 
-declare module '@theme/CodeBlock/WordWrapButton' {
+declare module "@theme/CodeBlock/WordWrapButton" {
   export interface Props {
     readonly className?: string;
     readonly onClick: React.MouseEventHandler;
@@ -322,8 +322,8 @@ declare module '@theme/CodeBlock/WordWrapButton' {
   export default function WordWrapButton(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocCard' {
-  import type {PropSidebarItem} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocCard" {
+  import type { PropSidebarItem } from "@docusaurus/plugin-content-docs";
 
   export interface Props {
     readonly item: PropSidebarItem;
@@ -332,8 +332,8 @@ declare module '@theme/DocCard' {
   export default function DocCard(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocCardList' {
-  import type {PropSidebarItem} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocCardList" {
+  import type { PropSidebarItem } from "@docusaurus/plugin-content-docs";
 
   export interface Props {
     readonly items?: PropSidebarItem[];
@@ -343,7 +343,7 @@ declare module '@theme/DocCardList' {
   export default function DocCardList(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocItem/Layout' {
+declare module "@theme/DocItem/Layout" {
   export interface Props {
     readonly children: JSX.Element;
   }
@@ -351,11 +351,11 @@ declare module '@theme/DocItem/Layout' {
   export default function DocItemLayout(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocItem/Metadata' {
+declare module "@theme/DocItem/Metadata" {
   export default function DocItemMetadata(): JSX.Element;
 }
 
-declare module '@theme/DocItem/Content' {
+declare module "@theme/DocItem/Content" {
   export interface Props {
     readonly children: JSX.Element;
   }
@@ -363,24 +363,24 @@ declare module '@theme/DocItem/Content' {
   export default function DocItemContent(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocItem/TOC/Mobile' {
+declare module "@theme/DocItem/TOC/Mobile" {
   export default function DocItemTOCMobile(): JSX.Element;
 }
 
-declare module '@theme/DocItem/TOC/Desktop' {
+declare module "@theme/DocItem/TOC/Desktop" {
   export default function DocItemTOCDesktop(): JSX.Element;
 }
 
-declare module '@theme/DocItem/Paginator' {
+declare module "@theme/DocItem/Paginator" {
   export default function DocItemPaginator(): JSX.Element;
 }
 
-declare module '@theme/DocItem/Footer' {
+declare module "@theme/DocItem/Footer" {
   export default function DocItemFooter(): JSX.Element;
 }
 
-declare module '@theme/DocPage/Layout' {
-  import type {ReactNode} from 'react';
+declare module "@theme/DocPage/Layout" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     readonly children: ReactNode;
@@ -389,9 +389,9 @@ declare module '@theme/DocPage/Layout' {
   export default function DocPageLayout(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocPage/Layout/Sidebar' {
-  import type {Dispatch, SetStateAction} from 'react';
-  import type {PropSidebar} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocPage/Layout/Sidebar" {
+  import type { Dispatch, SetStateAction } from "react";
+  import type { PropSidebar } from "@docusaurus/plugin-content-docs";
 
   export interface Props {
     readonly sidebar: PropSidebar;
@@ -402,18 +402,18 @@ declare module '@theme/DocPage/Layout/Sidebar' {
   export default function DocPageLayoutSidebar(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocPage/Layout/Sidebar/ExpandButton' {
+declare module "@theme/DocPage/Layout/Sidebar/ExpandButton" {
   export interface Props {
     toggleSidebar: () => void;
   }
 
   export default function DocPageLayoutSidebarExpandButton(
-    props: Props,
+    props: Props
   ): JSX.Element;
 }
 
-declare module '@theme/DocPage/Layout/Main' {
-  import type {ReactNode} from 'react';
+declare module "@theme/DocPage/Layout/Main" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     readonly hiddenSidebarContainer: boolean;
@@ -423,8 +423,8 @@ declare module '@theme/DocPage/Layout/Main' {
   export default function DocPageLayoutMain(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocPaginator' {
-  import type {PropNavigation} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocPaginator" {
+  import type { PropNavigation } from "@docusaurus/plugin-content-docs";
 
   // May be simpler to provide a {navigation: PropNavigation} prop?
   export interface Props extends PropNavigation {}
@@ -432,8 +432,8 @@ declare module '@theme/DocPaginator' {
   export default function DocPaginator(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebar' {
-  import type {PropSidebarItem} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocSidebar" {
+  import type { PropSidebarItem } from "@docusaurus/plugin-content-docs";
 
   export interface Props {
     readonly path: string;
@@ -445,24 +445,24 @@ declare module '@theme/DocSidebar' {
   export default function DocSidebar(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebar/Mobile' {
-  import type {Props as DocSidebarProps} from '@theme/DocSidebar';
+declare module "@theme/DocSidebar/Mobile" {
+  import type { Props as DocSidebarProps } from "@theme/DocSidebar";
 
   export interface Props extends DocSidebarProps {}
 
   export default function DocSidebarMobile(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebar/Desktop' {
-  import type {Props as DocSidebarProps} from '@theme/DocSidebar';
+declare module "@theme/DocSidebar/Desktop" {
+  import type { Props as DocSidebarProps } from "@theme/DocSidebar";
 
   export interface Props extends DocSidebarProps {}
 
   export default function DocSidebarDesktop(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebar/Desktop/Content' {
-  import type {PropSidebarItem} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocSidebar/Desktop/Content" {
+  import type { PropSidebarItem } from "@docusaurus/plugin-content-docs";
 
   export interface Props {
     readonly className?: string;
@@ -473,7 +473,7 @@ declare module '@theme/DocSidebar/Desktop/Content' {
   export default function Content(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebar/Desktop/CollapseButton' {
+declare module "@theme/DocSidebar/Desktop/CollapseButton" {
   export interface Props {
     readonly onClick: React.MouseEventHandler;
   }
@@ -481,8 +481,8 @@ declare module '@theme/DocSidebar/Desktop/CollapseButton' {
   export default function CollapseButton(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebarItem' {
-  import type {PropSidebarItem} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocSidebarItem" {
+  import type { PropSidebarItem } from "@docusaurus/plugin-content-docs";
 
   export interface Props {
     readonly activePath: string;
@@ -496,10 +496,10 @@ declare module '@theme/DocSidebarItem' {
   export default function DocSidebarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebarItem/Link' {
-  import type {Props as DocSidebarItemProps} from '@theme/DocSidebarItem';
+declare module "@theme/DocSidebarItem/Link" {
+  import type { Props as DocSidebarItemProps } from "@theme/DocSidebarItem";
 
-  import type {PropSidebarItemLink} from '@docusaurus/plugin-content-docs';
+  import type { PropSidebarItemLink } from "@docusaurus/plugin-content-docs";
 
   export interface Props extends DocSidebarItemProps {
     readonly item: PropSidebarItemLink;
@@ -508,9 +508,9 @@ declare module '@theme/DocSidebarItem/Link' {
   export default function DocSidebarItemLink(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebarItem/Html' {
-  import type {Props as DocSidebarItemProps} from '@theme/DocSidebarItem';
-  import type {PropSidebarItemHtml} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocSidebarItem/Html" {
+  import type { Props as DocSidebarItemProps } from "@theme/DocSidebarItem";
+  import type { PropSidebarItemHtml } from "@docusaurus/plugin-content-docs";
 
   export interface Props extends DocSidebarItemProps {
     readonly item: PropSidebarItemHtml;
@@ -519,9 +519,9 @@ declare module '@theme/DocSidebarItem/Html' {
   export default function DocSidebarItemHtml(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebarItem/Category' {
-  import type {Props as DocSidebarItemProps} from '@theme/DocSidebarItem';
-  import type {PropSidebarItemCategory} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocSidebarItem/Category" {
+  import type { Props as DocSidebarItemProps } from "@theme/DocSidebarItem";
+  import type { PropSidebarItemCategory } from "@docusaurus/plugin-content-docs";
 
   export interface Props extends DocSidebarItemProps {
     readonly item: PropSidebarItemCategory;
@@ -530,18 +530,18 @@ declare module '@theme/DocSidebarItem/Category' {
   export default function DocSidebarItemCategory(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocSidebarItems' {
-  import type {Props as DocSidebarItemProps} from '@theme/DocSidebarItem';
-  import type {PropSidebarItem} from '@docusaurus/plugin-content-docs';
+declare module "@theme/DocSidebarItems" {
+  import type { Props as DocSidebarItemProps } from "@theme/DocSidebarItem";
+  import type { PropSidebarItem } from "@docusaurus/plugin-content-docs";
 
-  export interface Props extends Omit<DocSidebarItemProps, 'item' | 'index'> {
+  export interface Props extends Omit<DocSidebarItemProps, "item" | "index"> {
     readonly items: readonly PropSidebarItem[];
   }
 
   export default function DocSidebarItems(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocVersionBanner' {
+declare module "@theme/DocVersionBanner" {
   export interface Props {
     readonly className?: string;
   }
@@ -549,7 +549,7 @@ declare module '@theme/DocVersionBanner' {
   export default function DocVersionBanner(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocVersionBadge' {
+declare module "@theme/DocVersionBadge" {
   export interface Props {
     readonly className?: string;
   }
@@ -557,30 +557,30 @@ declare module '@theme/DocVersionBadge' {
   export default function DocVersionBadge(props: Props): JSX.Element;
 }
 
-declare module '@theme/DocVersionSuggestions' {
+declare module "@theme/DocVersionSuggestions" {
   export default function DocVersionSuggestions(): JSX.Element;
 }
 
-declare module '@theme/EditThisPage' {
+declare module "@theme/EditThisPage" {
   export interface Props {
     readonly editUrl: string;
   }
   export default function EditThisPage(props: Props): JSX.Element;
 }
 
-declare module '@theme/ErrorPageContent' {
-  import type ErrorComponent from '@theme/Error';
+declare module "@theme/ErrorPageContent" {
+  import type ErrorComponent from "@theme/Error";
 
   const ErrorPageContent: typeof ErrorComponent;
   export default ErrorPageContent;
 }
 
-declare module '@theme/Footer' {
+declare module "@theme/Footer" {
   export default function Footer(): JSX.Element | null;
 }
 
-declare module '@theme/Footer/Logo' {
-  import type {FooterLogo} from '@docusaurus/theme-common';
+declare module "@theme/Footer/Logo" {
+  import type { FooterLogo } from "@docusaurus/theme-common";
 
   export interface Props {
     readonly logo: FooterLogo;
@@ -589,7 +589,7 @@ declare module '@theme/Footer/Logo' {
   export default function FooterLogo(props: Props): JSX.Element;
 }
 
-declare module '@theme/Footer/Copyright' {
+declare module "@theme/Footer/Copyright" {
   export interface Props {
     readonly copyright: string;
   }
@@ -597,8 +597,8 @@ declare module '@theme/Footer/Copyright' {
   export default function FooterCopyright(props: Props): JSX.Element;
 }
 
-declare module '@theme/Footer/LinkItem' {
-  import type {FooterLinkItem} from '@docusaurus/theme-common';
+declare module "@theme/Footer/LinkItem" {
+  import type { FooterLinkItem } from "@docusaurus/theme-common";
 
   export interface Props {
     readonly item: FooterLinkItem;
@@ -607,11 +607,11 @@ declare module '@theme/Footer/LinkItem' {
   export default function FooterLinkItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/Footer/Layout' {
-  import type {ReactNode} from 'react';
+declare module "@theme/Footer/Layout" {
+  import type { ReactNode } from "react";
 
   export interface Props {
-    readonly style: 'light' | 'dark';
+    readonly style: "light" | "dark";
     readonly links: ReactNode;
     readonly logo: ReactNode;
     readonly copyright: ReactNode;
@@ -620,40 +620,40 @@ declare module '@theme/Footer/Layout' {
   export default function FooterLayout(props: Props): JSX.Element;
 }
 
-declare module '@theme/Footer/Links' {
-  import type {Footer} from '@docusaurus/theme-common';
+declare module "@theme/Footer/Links" {
+  import type { Footer } from "@docusaurus/theme-common";
 
   export interface Props {
-    readonly links: Footer['links'];
+    readonly links: Footer["links"];
   }
 
   export default function FooterLinks(props: Props): JSX.Element;
 }
 
-declare module '@theme/Footer/Links/MultiColumn' {
-  import type {MultiColumnFooter} from '@docusaurus/theme-common';
+declare module "@theme/Footer/Links/MultiColumn" {
+  import type { MultiColumnFooter } from "@docusaurus/theme-common";
 
   export interface Props {
-    readonly columns: MultiColumnFooter['links'];
+    readonly columns: MultiColumnFooter["links"];
   }
 
   export default function FooterLinksMultiColumn(props: Props): JSX.Element;
 }
 
-declare module '@theme/Footer/Links/Simple' {
-  import type {SimpleFooter} from '@docusaurus/theme-common';
+declare module "@theme/Footer/Links/Simple" {
+  import type { SimpleFooter } from "@docusaurus/theme-common";
 
   export interface Props {
-    readonly links: SimpleFooter['links'];
+    readonly links: SimpleFooter["links"];
   }
 
   export default function FooterLinksSimple(props: Props): JSX.Element;
 }
 
-declare module '@theme/Heading' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Heading" {
+  import type { ComponentProps } from "react";
 
-  type HeadingType = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
+  type HeadingType = "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
 
   export interface Props extends ComponentProps<HeadingType> {
     readonly as: HeadingType;
@@ -662,8 +662,8 @@ declare module '@theme/Heading' {
   export default function Heading(props: Props): JSX.Element;
 }
 
-declare module '@theme/Layout' {
-  import type {ReactNode} from 'react';
+declare module "@theme/Layout" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     readonly children?: ReactNode;
@@ -678,8 +678,8 @@ declare module '@theme/Layout' {
   export default function Layout(props: Props): JSX.Element;
 }
 
-declare module '@theme/Layout/Provider' {
-  import type {ReactNode} from 'react';
+declare module "@theme/Layout/Provider" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     readonly children: ReactNode;
@@ -688,7 +688,7 @@ declare module '@theme/Layout/Provider' {
   export default function LayoutProvider(props: Props): JSX.Element;
 }
 
-declare module '@theme/SearchMetadata' {
+declare module "@theme/SearchMetadata" {
   export interface Props {
     readonly locale?: string;
     readonly version?: string;
@@ -698,7 +698,7 @@ declare module '@theme/SearchMetadata' {
   export default function SearchMetadata(props: Props): JSX.Element;
 }
 
-declare module '@theme/LastUpdated' {
+declare module "@theme/LastUpdated" {
   export interface Props {
     readonly lastUpdatedAt?: number;
     readonly formattedLastUpdatedAt?: string;
@@ -708,87 +708,87 @@ declare module '@theme/LastUpdated' {
   export default function LastUpdated(props: Props): JSX.Element;
 }
 
-declare module '@theme/SkipToContent' {
+declare module "@theme/SkipToContent" {
   export default function SkipToContent(): JSX.Element;
 }
 
-declare module '@theme/MDXComponents/A' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/MDXComponents/A" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'a'> {}
+  export interface Props extends ComponentProps<"a"> {}
 
   export default function MDXA(props: Props): JSX.Element;
 }
 
-declare module '@theme/MDXComponents/Code' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/MDXComponents/Code" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'code'> {}
+  export interface Props extends ComponentProps<"code"> {}
 
   export default function MDXCode(props: Props): JSX.Element;
 }
 
-declare module '@theme/MDXComponents/Details' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/MDXComponents/Details" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'details'> {}
+  export interface Props extends ComponentProps<"details"> {}
 
   export default function MDXDetails(props: Props): JSX.Element;
 }
 
-declare module '@theme/MDXComponents/Ul' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/MDXComponents/Ul" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'ul'> {}
+  export interface Props extends ComponentProps<"ul"> {}
 
   export default function MDXUl(props: Props): JSX.Element;
 }
 
-declare module '@theme/MDXComponents/Img' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/MDXComponents/Img" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'img'> {}
+  export interface Props extends ComponentProps<"img"> {}
 
   export default function MDXImg(props: Props): JSX.Element;
 }
 
-declare module '@theme/MDXComponents/Head' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/MDXComponents/Head" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'head'> {}
+  export interface Props extends ComponentProps<"head"> {}
 
   export default function MDXHead(props: Props): JSX.Element;
 }
 
-declare module '@theme/MDXComponents/Heading' {
-  import type {ComponentProps} from 'react';
-  import type Heading from '@theme/Heading';
+declare module "@theme/MDXComponents/Heading" {
+  import type { ComponentProps } from "react";
+  import type Heading from "@theme/Heading";
 
   export interface Props extends ComponentProps<typeof Heading> {}
 
   export default function MDXHeading(props: Props): JSX.Element;
 }
 
-declare module '@theme/MDXComponents/Pre' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/MDXComponents/Pre" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'pre'> {}
+  export interface Props extends ComponentProps<"pre"> {}
 
   export default function MDXPre(props: Props): JSX.Element;
 }
 
-declare module '@theme/MDXComponents' {
-  import type {ComponentType, ComponentProps} from 'react';
+declare module "@theme/MDXComponents" {
+  import type { ComponentType, ComponentProps } from "react";
 
-  import type MDXHead from '@theme/MDXComponents/Head';
-  import type MDXCode from '@theme/MDXComponents/Code';
-  import type MDXA from '@theme/MDXComponents/A';
-  import type MDXPre from '@theme/MDXComponents/Pre';
-  import type MDXDetails from '@theme/MDXComponents/Details';
-  import type MDXUl from '@theme/MDXComponents/Ul';
-  import type MDXImg from '@theme/MDXComponents/Img';
-  import type Admonition from '@theme/Admonition';
-  import type Mermaid from '@theme/Mermaid';
+  import type MDXHead from "@theme/MDXComponents/Head";
+  import type MDXCode from "@theme/MDXComponents/Code";
+  import type MDXA from "@theme/MDXComponents/A";
+  import type MDXPre from "@theme/MDXComponents/Pre";
+  import type MDXDetails from "@theme/MDXComponents/Details";
+  import type MDXUl from "@theme/MDXComponents/Ul";
+  import type MDXImg from "@theme/MDXComponents/Img";
+  import type Admonition from "@theme/Admonition";
+  import type Mermaid from "@theme/Mermaid";
 
   export type MDXComponentsObject = {
     readonly head: typeof MDXHead;
@@ -798,12 +798,12 @@ declare module '@theme/MDXComponents' {
     readonly details: typeof MDXDetails;
     readonly ul: typeof MDXUl;
     readonly img: typeof MDXImg;
-    readonly h1: (props: ComponentProps<'h1'>) => JSX.Element;
-    readonly h2: (props: ComponentProps<'h2'>) => JSX.Element;
-    readonly h3: (props: ComponentProps<'h3'>) => JSX.Element;
-    readonly h4: (props: ComponentProps<'h4'>) => JSX.Element;
-    readonly h5: (props: ComponentProps<'h5'>) => JSX.Element;
-    readonly h6: (props: ComponentProps<'h6'>) => JSX.Element;
+    readonly h1: (props: ComponentProps<"h1">) => JSX.Element;
+    readonly h2: (props: ComponentProps<"h2">) => JSX.Element;
+    readonly h3: (props: ComponentProps<"h3">) => JSX.Element;
+    readonly h4: (props: ComponentProps<"h4">) => JSX.Element;
+    readonly h5: (props: ComponentProps<"h5">) => JSX.Element;
+    readonly h6: (props: ComponentProps<"h6">) => JSX.Element;
     readonly admonition: typeof Admonition;
     readonly mermaid: typeof Mermaid;
     // eslint-disable-next-line @typescript-eslint/no-explicit-any
@@ -814,8 +814,8 @@ declare module '@theme/MDXComponents' {
   export default MDXComponents;
 }
 
-declare module '@theme/MDXContent' {
-  import type {ReactNode} from 'react';
+declare module "@theme/MDXContent" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     readonly children: ReactNode;
@@ -824,29 +824,29 @@ declare module '@theme/MDXContent' {
   export default function MDXContent(props: Props): JSX.Element;
 }
 
-declare module '@theme/Navbar' {
+declare module "@theme/Navbar" {
   export default function Navbar(): JSX.Element;
 }
 
-declare module '@theme/Navbar/ColorModeToggle' {
+declare module "@theme/Navbar/ColorModeToggle" {
   export interface Props {
     readonly className?: string;
   }
 
   export default function NavbarColorModeToggle(
-    props: Props,
+    props: Props
   ): JSX.Element | null;
 }
 
-declare module '@theme/Navbar/Logo' {
+declare module "@theme/Navbar/Logo" {
   export default function NavbarLogo(): JSX.Element;
 }
 
-declare module '@theme/Navbar/Content' {
+declare module "@theme/Navbar/Content" {
   export default function NavbarContent(): JSX.Element;
 }
 
-declare module '@theme/Navbar/Layout' {
+declare module "@theme/Navbar/Layout" {
   export interface Props {
     readonly children: React.ReactNode;
   }
@@ -854,12 +854,12 @@ declare module '@theme/Navbar/Layout' {
   export default function NavbarLayout(props: Props): JSX.Element;
 }
 
-declare module '@theme/Navbar/MobileSidebar' {
+declare module "@theme/Navbar/MobileSidebar" {
   export default function NavbarMobileSidebar(): JSX.Element;
 }
 
-declare module '@theme/Navbar/MobileSidebar/Layout' {
-  import type {ReactNode} from 'react';
+declare module "@theme/Navbar/MobileSidebar/Layout" {
+  import type { ReactNode } from "react";
 
   interface Props {
     readonly header: ReactNode;
@@ -870,24 +870,24 @@ declare module '@theme/Navbar/MobileSidebar/Layout' {
   export default function NavbarMobileSidebarLayout(props: Props): JSX.Element;
 }
 
-declare module '@theme/Navbar/MobileSidebar/Toggle' {
+declare module "@theme/Navbar/MobileSidebar/Toggle" {
   export default function NavbarMobileSidebarToggle(): JSX.Element;
 }
 
-declare module '@theme/Navbar/MobileSidebar/PrimaryMenu' {
+declare module "@theme/Navbar/MobileSidebar/PrimaryMenu" {
   export default function NavbarMobileSidebarPrimaryMenu(): JSX.Element;
 }
 
-declare module '@theme/Navbar/MobileSidebar/SecondaryMenu' {
+declare module "@theme/Navbar/MobileSidebar/SecondaryMenu" {
   export default function NavbarMobileSidebarSecondaryMenu(): JSX.Element;
 }
 
-declare module '@theme/Navbar/MobileSidebar/Header' {
+declare module "@theme/Navbar/MobileSidebar/Header" {
   export default function NavbarMobileSidebarHeader(): JSX.Element;
 }
 
-declare module '@theme/Navbar/Search' {
-  import type {ReactNode} from 'react';
+declare module "@theme/Navbar/Search" {
+  import type { ReactNode } from "react";
 
   export interface Props {
     readonly children: ReactNode;
@@ -897,13 +897,13 @@ declare module '@theme/Navbar/Search' {
   export default function NavbarSearch(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/DefaultNavbarItem' {
-  import type {Props as NavbarNavLinkProps} from '@theme/NavbarItem/NavbarNavLink';
+declare module "@theme/NavbarItem/DefaultNavbarItem" {
+  import type { Props as NavbarNavLinkProps } from "@theme/NavbarItem/NavbarNavLink";
 
   export type DesktopOrMobileNavBarItemProps = NavbarNavLinkProps & {
     readonly isDropdownItem?: boolean;
     readonly className?: string;
-    readonly position?: 'left' | 'right';
+    readonly position?: "left" | "right";
   };
 
   export interface Props extends DesktopOrMobileNavBarItemProps {
@@ -913,9 +913,9 @@ declare module '@theme/NavbarItem/DefaultNavbarItem' {
   export default function DefaultNavbarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/NavbarNavLink' {
-  import type {ReactNode} from 'react';
-  import type {Props as LinkProps} from '@docusaurus/Link';
+declare module "@theme/NavbarItem/NavbarNavLink" {
+  import type { ReactNode } from "react";
+  import type { Props as LinkProps } from "@docusaurus/Link";
 
   export interface Props extends LinkProps {
     readonly activeBasePath?: string;
@@ -930,12 +930,12 @@ declare module '@theme/NavbarItem/NavbarNavLink' {
   export default function NavbarNavLink(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/DropdownNavbarItem' {
-  import type {Props as NavbarNavLinkProps} from '@theme/NavbarItem/NavbarNavLink';
-  import type {LinkLikeNavbarItemProps} from '@theme/NavbarItem';
+declare module "@theme/NavbarItem/DropdownNavbarItem" {
+  import type { Props as NavbarNavLinkProps } from "@theme/NavbarItem/NavbarNavLink";
+  import type { LinkLikeNavbarItemProps } from "@theme/NavbarItem";
 
   export type DesktopOrMobileNavBarItemProps = NavbarNavLinkProps & {
-    readonly position?: 'left' | 'right';
+    readonly position?: "left" | "right";
     readonly items: readonly LinkLikeNavbarItemProps[];
     readonly className?: string;
   };
@@ -947,7 +947,7 @@ declare module '@theme/NavbarItem/DropdownNavbarItem' {
   export default function DropdownNavbarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/SearchNavbarItem' {
+declare module "@theme/NavbarItem/SearchNavbarItem" {
   export interface Props {
     readonly mobile?: boolean;
     readonly className?: string;
@@ -956,9 +956,9 @@ declare module '@theme/NavbarItem/SearchNavbarItem' {
   export default function SearchNavbarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/LocaleDropdownNavbarItem' {
-  import type {Props as DropdownNavbarItemProps} from '@theme/NavbarItem/DropdownNavbarItem';
-  import type {LinkLikeNavbarItemProps} from '@theme/NavbarItem';
+declare module "@theme/NavbarItem/LocaleDropdownNavbarItem" {
+  import type { Props as DropdownNavbarItemProps } from "@theme/NavbarItem/DropdownNavbarItem";
+  import type { LinkLikeNavbarItemProps } from "@theme/NavbarItem";
 
   export interface Props extends DropdownNavbarItemProps {
     readonly dropdownItemsBefore: LinkLikeNavbarItemProps[];
@@ -968,9 +968,9 @@ declare module '@theme/NavbarItem/LocaleDropdownNavbarItem' {
   export default function LocaleDropdownNavbarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/DocsVersionDropdownNavbarItem' {
-  import type {Props as DropdownNavbarItemProps} from '@theme/NavbarItem/DropdownNavbarItem';
-  import type {LinkLikeNavbarItemProps} from '@theme/NavbarItem';
+declare module "@theme/NavbarItem/DocsVersionDropdownNavbarItem" {
+  import type { Props as DropdownNavbarItemProps } from "@theme/NavbarItem/DropdownNavbarItem";
+  import type { LinkLikeNavbarItemProps } from "@theme/NavbarItem";
 
   export interface Props extends DropdownNavbarItemProps {
     readonly docsPluginId?: string;
@@ -980,12 +980,12 @@ declare module '@theme/NavbarItem/DocsVersionDropdownNavbarItem' {
   }
 
   export default function DocsVersionDropdownNavbarItem(
-    props: Props,
+    props: Props
   ): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/DocsVersionNavbarItem' {
-  import type {Props as DefaultNavbarItemProps} from '@theme/NavbarItem/DefaultNavbarItem';
+declare module "@theme/NavbarItem/DocsVersionNavbarItem" {
+  import type { Props as DefaultNavbarItemProps } from "@theme/NavbarItem/DefaultNavbarItem";
 
   export interface Props extends DefaultNavbarItemProps {
     readonly docsPluginId?: string;
@@ -994,8 +994,8 @@ declare module '@theme/NavbarItem/DocsVersionNavbarItem' {
   export default function DocsVersionNavbarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/DocNavbarItem' {
-  import type {Props as DefaultNavbarItemProps} from '@theme/NavbarItem/DefaultNavbarItem';
+declare module "@theme/NavbarItem/DocNavbarItem" {
+  import type { Props as DefaultNavbarItemProps } from "@theme/NavbarItem/DefaultNavbarItem";
 
   export interface Props extends DefaultNavbarItemProps {
     readonly docId: string;
@@ -1003,12 +1003,12 @@ declare module '@theme/NavbarItem/DocNavbarItem' {
   }
 
   export default function DocsSidebarNavbarItem(
-    props: Props,
+    props: Props
   ): JSX.Element | null;
 }
 
-declare module '@theme/NavbarItem/DocSidebarNavbarItem' {
-  import type {Props as DefaultNavbarItemProps} from '@theme/NavbarItem/DefaultNavbarItem';
+declare module "@theme/NavbarItem/DocSidebarNavbarItem" {
+  import type { Props as DefaultNavbarItemProps } from "@theme/NavbarItem/DefaultNavbarItem";
 
   export interface Props extends DefaultNavbarItemProps {
     readonly sidebarId: string;
@@ -1018,8 +1018,8 @@ declare module '@theme/NavbarItem/DocSidebarNavbarItem' {
   export default function DocSidebarNavbarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/HtmlNavbarItem' {
-  import type {Props as DefaultNavbarItemProps} from '@theme/NavbarItem/DefaultNavbarItem';
+declare module "@theme/NavbarItem/HtmlNavbarItem" {
+  import type { Props as DefaultNavbarItemProps } from "@theme/NavbarItem/DefaultNavbarItem";
 
   export interface Props extends DefaultNavbarItemProps {
     readonly value: string;
@@ -1028,18 +1028,18 @@ declare module '@theme/NavbarItem/HtmlNavbarItem' {
   export default function HtmlNavbarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/NavbarItem/ComponentTypes' {
-  import type {ComponentType} from 'react';
+declare module "@theme/NavbarItem/ComponentTypes" {
+  import type { ComponentType } from "react";
 
-  import type DefaultNavbarItem from '@theme/NavbarItem/DefaultNavbarItem';
-  import type DropdownNavbarItem from '@theme/NavbarItem/DropdownNavbarItem';
-  import type LocaleDropdownNavbarItem from '@theme/NavbarItem/LocaleDropdownNavbarItem';
-  import type SearchNavbarItem from '@theme/NavbarItem/SearchNavbarItem';
-  import type HtmlNavbarItem from '@theme/NavbarItem/HtmlNavbarItem';
-  import type DocNavbarItem from '@theme/NavbarItem/DocNavbarItem';
-  import type DocSidebarNavbarItem from '@theme/NavbarItem/DocSidebarNavbarItem';
-  import type DocsVersionNavbarItem from '@theme/NavbarItem/DocsVersionNavbarItem';
-  import type DocsVersionDropdownNavbarItem from '@theme/NavbarItem/DocsVersionDropdownNavbarItem';
+  import type DefaultNavbarItem from "@theme/NavbarItem/DefaultNavbarItem";
+  import type DropdownNavbarItem from "@theme/NavbarItem/DropdownNavbarItem";
+  import type LocaleDropdownNavbarItem from "@theme/NavbarItem/LocaleDropdownNavbarItem";
+  import type SearchNavbarItem from "@theme/NavbarItem/SearchNavbarItem";
+  import type HtmlNavbarItem from "@theme/NavbarItem/HtmlNavbarItem";
+  import type DocNavbarItem from "@theme/NavbarItem/DocNavbarItem";
+  import type DocSidebarNavbarItem from "@theme/NavbarItem/DocSidebarNavbarItem";
+  import type DocsVersionNavbarItem from "@theme/NavbarItem/DocsVersionNavbarItem";
+  import type DocsVersionDropdownNavbarItem from "@theme/NavbarItem/DocsVersionDropdownNavbarItem";
 
   export type ComponentTypesObject = {
     readonly default: typeof DefaultNavbarItem;
@@ -1059,49 +1059,49 @@ declare module '@theme/NavbarItem/ComponentTypes' {
   export default ComponentTypes;
 }
 
-declare module '@theme/NavbarItem' {
-  import type {ComponentProps} from 'react';
-  import type {Props as DefaultNavbarItemProps} from '@theme/NavbarItem/DefaultNavbarItem';
-  import type {Props as DocNavbarItemProps} from '@theme/NavbarItem/DocNavbarItem';
-  import type {Props as DocSidebarNavbarItemProps} from '@theme/NavbarItem/DocSidebarNavbarItem';
-  import type {Props as DocsVersionNavbarItemProps} from '@theme/NavbarItem/DocsVersionNavbarItem';
-  import type {Props as DropdownNavbarItemProps} from '@theme/NavbarItem/DropdownNavbarItem';
-  import type {Props as DocsVersionDropdownNavbarItemProps} from '@theme/NavbarItem/DocsVersionDropdownNavbarItem';
-  import type {Props as LocaleDropdownNavbarItemProps} from '@theme/NavbarItem/LocaleDropdownNavbarItem';
-  import type {Props as SearchNavbarItemProps} from '@theme/NavbarItem/SearchNavbarItem';
-  import type {Props as HtmlNavbarItemProps} from '@theme/NavbarItem/HtmlNavbarItem';
+declare module "@theme/NavbarItem" {
+  import type { ComponentProps } from "react";
+  import type { Props as DefaultNavbarItemProps } from "@theme/NavbarItem/DefaultNavbarItem";
+  import type { Props as DocNavbarItemProps } from "@theme/NavbarItem/DocNavbarItem";
+  import type { Props as DocSidebarNavbarItemProps } from "@theme/NavbarItem/DocSidebarNavbarItem";
+  import type { Props as DocsVersionNavbarItemProps } from "@theme/NavbarItem/DocsVersionNavbarItem";
+  import type { Props as DropdownNavbarItemProps } from "@theme/NavbarItem/DropdownNavbarItem";
+  import type { Props as DocsVersionDropdownNavbarItemProps } from "@theme/NavbarItem/DocsVersionDropdownNavbarItem";
+  import type { Props as LocaleDropdownNavbarItemProps } from "@theme/NavbarItem/LocaleDropdownNavbarItem";
+  import type { Props as SearchNavbarItemProps } from "@theme/NavbarItem/SearchNavbarItem";
+  import type { Props as HtmlNavbarItemProps } from "@theme/NavbarItem/HtmlNavbarItem";
 
   export type LinkLikeNavbarItemProps =
-    | ({readonly type?: 'default'} & DefaultNavbarItemProps)
-    | ({readonly type: 'doc'} & DocNavbarItemProps)
-    | ({readonly type: 'docsVersion'} & DocsVersionNavbarItemProps)
-    | ({readonly type: 'docSidebar'} & DocSidebarNavbarItemProps)
-    | ({readonly type: 'html'} & HtmlNavbarItemProps);
-
-  export type Props = ComponentProps<'a'> & {
-    readonly position?: 'left' | 'right';
+    | ({ readonly type?: "default" } & DefaultNavbarItemProps)
+    | ({ readonly type: "doc" } & DocNavbarItemProps)
+    | ({ readonly type: "docsVersion" } & DocsVersionNavbarItemProps)
+    | ({ readonly type: "docSidebar" } & DocSidebarNavbarItemProps)
+    | ({ readonly type: "html" } & HtmlNavbarItemProps);
+
+  export type Props = ComponentProps<"a"> & {
+    readonly position?: "left" | "right";
   } & (
       | LinkLikeNavbarItemProps
-      | ({readonly type?: 'dropdown'} & DropdownNavbarItemProps)
+      | ({ readonly type?: "dropdown" } & DropdownNavbarItemProps)
       | ({
-          readonly type: 'docsVersionDropdown';
+          readonly type: "docsVersionDropdown";
         } & DocsVersionDropdownNavbarItemProps)
-      | ({readonly type: 'localeDropdown'} & LocaleDropdownNavbarItemProps)
+      | ({ readonly type: "localeDropdown" } & LocaleDropdownNavbarItemProps)
       | ({
-          readonly type: 'search';
+          readonly type: "search";
         } & SearchNavbarItemProps)
     );
 
-  export type NavbarItemType = Props['type'];
+  export type NavbarItemType = Props["type"];
 
   export default function NavbarItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/PaginatorNavLink' {
-  import type {ReactNode} from 'react';
-  import type {PropNavigationLink} from '@docusaurus/plugin-content-docs';
+declare module "@theme/PaginatorNavLink" {
+  import type { ReactNode } from "react";
+  import type { PropNavigationLink } from "@docusaurus/plugin-content-docs";
 
-  export interface Props extends Omit<PropNavigationLink, 'title'> {
+  export interface Props extends Omit<PropNavigationLink, "title"> {
     readonly title: ReactNode;
     readonly subLabel?: JSX.Element;
     readonly isNext?: boolean;
@@ -1110,11 +1110,11 @@ declare module '@theme/PaginatorNavLink' {
   export default function PaginatorNavLink(props: Props): JSX.Element;
 }
 
-declare module '@theme/SearchBar' {
+declare module "@theme/SearchBar" {
   export default function SearchBar(): JSX.Element;
 }
 
-declare module '@theme/Mermaid' {
+declare module "@theme/Mermaid" {
   export interface Props {
     value: string;
   }
@@ -1122,26 +1122,34 @@ declare module '@theme/Mermaid' {
   export default function Mermaid(props: Props): JSX.Element;
 }
 
-declare module '@theme/TabItem' {
-  import type {TabItemProps} from '@docusaurus/theme-common/internal';
+declare module "@theme/TabItem" {
+  import type { TabItemProps } from "@docusaurus/theme-common/internal";
 
-  export interface Props extends TabItemProps {}
+  export interface Props extends TabItemProps {
+    children: React.ReactNode;
+    value?: string;
+  }
 
   export default function TabItem(props: Props): JSX.Element;
 }
 
-declare module '@theme/Tabs' {
-  import type {TabsProps} from '@docusaurus/theme-common/internal';
+declare module "@theme/Tabs" {
+  import type { TabsProps } from "@docusaurus/theme-common/internal";
 
-  export interface Props extends TabsProps {}
+  export interface Props extends TabsProps {
+    children: React.ReactNode;
+    groupId?: string;
+    defaultValue?: string;
+    values?: { label: string; value: string }[];
+  }
 
   export default function Tabs(props: Props): JSX.Element;
 }
 
-declare module '@theme/ThemedImage' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/ThemedImage" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends Omit<ComponentProps<'img'>, 'src'> {
+  export interface Props extends Omit<ComponentProps<"img">, "src"> {
     readonly sources: {
       readonly light: string;
       readonly dark: string;
@@ -1151,15 +1159,15 @@ declare module '@theme/ThemedImage' {
   export default function ThemedImage(props: Props): JSX.Element;
 }
 
-declare module '@theme/Details' {
-  import {Details, type DetailsProps} from '@docusaurus/theme-common/Details';
+declare module "@theme/Details" {
+  import { Details, type DetailsProps } from "@docusaurus/theme-common/Details";
 
   export interface Props extends DetailsProps {}
   export default Details;
 }
 
-declare module '@theme/TOCItems' {
-  import type {TOCItem} from '@docusaurus/mdx-loader';
+declare module "@theme/TOCItems" {
+  import type { TOCItem } from "@docusaurus/mdx-loader";
 
   export interface Props {
     readonly toc: readonly TOCItem[];
@@ -1173,8 +1181,8 @@ declare module '@theme/TOCItems' {
   export default function TOCItems(props: Props): JSX.Element;
 }
 
-declare module '@theme/TOCItems/Tree' {
-  import type {TOCTreeNode} from '@docusaurus/theme-common/internal';
+declare module "@theme/TOCItems/Tree" {
+  import type { TOCTreeNode } from "@docusaurus/theme-common/internal";
 
   export interface Props {
     readonly toc: readonly TOCTreeNode[];
@@ -1186,8 +1194,8 @@ declare module '@theme/TOCItems/Tree' {
   export default function TOCItems(props: Props): JSX.Element;
 }
 
-declare module '@theme/TOC' {
-  import type {TOCItem} from '@docusaurus/mdx-loader';
+declare module "@theme/TOC" {
+  import type { TOCItem } from "@docusaurus/mdx-loader";
 
   // `minHeadingLevel` only comes from doc/post front matter, and won't have a
   // default set by Joi. See TOC, TOCInline, TOCCollapsible for examples.
@@ -1201,8 +1209,8 @@ declare module '@theme/TOC' {
   export default function TOC(props: Props): JSX.Element;
 }
 
-declare module '@theme/TOCInline' {
-  import type {TOCItem} from '@docusaurus/mdx-loader';
+declare module "@theme/TOCInline" {
+  import type { TOCItem } from "@docusaurus/mdx-loader";
 
   export interface Props {
     readonly toc: readonly TOCItem[];
@@ -1213,8 +1221,8 @@ declare module '@theme/TOCInline' {
   export default function TOCInline(props: Props): JSX.Element;
 }
 
-declare module '@theme/TOCCollapsible' {
-  import type {TOCItem} from '@docusaurus/mdx-loader';
+declare module "@theme/TOCCollapsible" {
+  import type { TOCItem } from "@docusaurus/mdx-loader";
 
   export interface Props {
     readonly className?: string;
@@ -1226,20 +1234,20 @@ declare module '@theme/TOCCollapsible' {
   export default function TOCCollapsible(props: Props): JSX.Element;
 }
 
-declare module '@theme/TOCCollapsible/CollapseButton' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/TOCCollapsible/CollapseButton" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'button'> {
+  export interface Props extends ComponentProps<"button"> {
     collapsed: boolean;
   }
 
   export default function TOCCollapsibleCollapseButton(
-    props: Props,
+    props: Props
   ): JSX.Element;
 }
 
-declare module '@theme/ColorModeToggle' {
-  import type {ColorMode} from '@docusaurus/theme-common';
+declare module "@theme/ColorModeToggle" {
+  import type { ColorMode } from "@docusaurus/theme-common";
 
   export interface Props {
     readonly className?: string;
@@ -1254,10 +1262,10 @@ declare module '@theme/ColorModeToggle' {
   export default function ColorModeToggle(props: Props): JSX.Element;
 }
 
-declare module '@theme/Logo' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Logo" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'a'> {
+  export interface Props extends ComponentProps<"a"> {
     readonly imageClassName?: string;
     readonly titleClassName?: string;
   }
@@ -1265,80 +1273,80 @@ declare module '@theme/Logo' {
   export default function Logo(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/Arrow' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/Arrow" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconArrow(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/DarkMode' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/DarkMode" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconDarkMode(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/Edit' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/Edit" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconEdit(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/Home' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/Home" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconHome(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/LightMode' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/LightMode" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconLightMode(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/Menu' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/Menu" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconMenu(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/Close' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/Close" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconClose(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/Language' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/Language" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconLanguage(props: Props): JSX.Element;
 }
 
-declare module '@theme/Icon/ExternalLink' {
-  import type {ComponentProps} from 'react';
+declare module "@theme/Icon/ExternalLink" {
+  import type { ComponentProps } from "react";
 
-  export interface Props extends ComponentProps<'svg'> {}
+  export interface Props extends ComponentProps<"svg"> {}
 
   export default function IconExternalLink(props: Props): JSX.Element;
 }
 
-declare module '@theme/TagsListByLetter' {
-  import type {TagsListItem} from '@docusaurus/utils';
+declare module "@theme/TagsListByLetter" {
+  import type { TagsListItem } from "@docusaurus/utils";
 
   export interface Props {
     readonly tags: readonly TagsListItem[];
@@ -1346,8 +1354,8 @@ declare module '@theme/TagsListByLetter' {
   export default function TagsListByLetter(props: Props): JSX.Element;
 }
 
-declare module '@theme/TagsListInline' {
-  import type {Tag} from '@docusaurus/utils';
+declare module "@theme/TagsListInline" {
+  import type { Tag } from "@docusaurus/utils";
 
   export interface Props {
     readonly tags: readonly Tag[];
@@ -1355,23 +1363,23 @@ declare module '@theme/TagsListInline' {
   export default function TagsListInline(props: Props): JSX.Element;
 }
 
-declare module '@theme/Tag' {
-  import type {TagsListItem} from '@docusaurus/utils';
-  import type {Optional} from 'utility-types';
+declare module "@theme/Tag" {
+  import type { TagsListItem } from "@docusaurus/utils";
+  import type { Optional } from "utility-types";
 
-  export interface Props extends Optional<TagsListItem, 'count'> {}
+  export interface Props extends Optional<TagsListItem, "count"> {}
 
   export default function Tag(props: Props): JSX.Element;
 }
 
-declare module '@theme/prism-include-languages' {
-  import type * as PrismNamespace from 'prismjs';
+declare module "@theme/prism-include-languages" {
+  import type * as PrismNamespace from "prismjs";
 
   export default function prismIncludeLanguages(
-    PrismObject: typeof PrismNamespace,
+    PrismObject: typeof PrismNamespace
   ): void;
 }
 
-declare module '@theme/DocBreadcrumbs/Items/Home' {
+declare module "@theme/DocBreadcrumbs/Items/Home" {
   export default function HomeBreadcrumbItem(): JSX.Element;
 }
