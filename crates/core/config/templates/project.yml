# https://moonrepo.dev/docs/config/project
$schema: 'https://moonrepo.dev/schemas/project.json'

# The type of project. Accepts "library" (default), "application", or "tool".
type: 'library'

# Primary programming language the project is written in.
language: 'typescript'

# This setting defines metadata about the project itself. Although this
# setting is optional, when defined, all fields within it must be defined as well.
project:
  # A human readable name of the project.
  name: 'Example'

  # A description of what the project does and aims to achieve.
  description: 'A description of what the example project does.'

  # The Slack, Discord, Teams, IRC, etc channel name (with leading #) in which to
  # discuss the project.
  channel: '#example'

  # The team or organization (not people/developers) that owns the project.
  # Can be a title, LDAP name, GitHub team, etc.
  owner: 'infra'

  # A list of people/developers that maintain the project, review code changes,
  # and can provide support. Can be a name, email, LDAP/GitHub username, etc.
  maintainers: ['user.name']

# An explicit list of other projects that this project depends on. Each value
# must be a unique project ID, and NOT a file path or project name.
#
# When `node.syncProjectWorkspaceDependencies` and `typescript.syncProjectReferences`
# are enabled in `.moon/toolchain.yml`, these dependencies will be mapped as dependencies
# in `package.json` and project references in `tsconfig.json`, respectively.
dependsOn: []

# File groups are a mechanism for grouping similar types of files within
# a project using file glob patterns. View `.moon/project.yml` for more info.
fileGroups: {}

# A task is an action that is ran within the context of a project, and
# wraps around an npm or system command. View `.moon/project.yml` for more info.
tasks: {}
