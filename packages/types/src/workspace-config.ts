// Automatically generated by schematic. DO NOT MODIFY!

/* eslint-disable */

export type CodeownersOrderBy = 'file-source' | 'project-name';

export interface PartialCodeownersConfig {
	globalPaths?: Record<string, string[]> | null;
	/** @default 'file-source' */
	orderBy?: CodeownersOrderBy | null;
	syncOnRun?: boolean | null;
}

export interface PartialConstraintsConfig {
	/** @default true */
	enforceProjectTypeRelationships?: boolean | null;
	tagRelationships?: Record<string, string[]> | null;
}

export interface PartialExperimentsConfig {
	/**
	 * @default true
	 * @deprecated
	 */
	interweavedTaskInheritance?: boolean | null;
	/** @default true */
	strictProjectAliases?: boolean | null;
	/**
	 * @default true
	 * @deprecated
	 */
	taskOutputBoundaries?: boolean | null;
}

export interface PartialGeneratorConfig {
	templates?: string[] | null;
}

export type HasherOptimization = 'accuracy' | 'performance';

export type HasherWalkStrategy = 'glob' | 'vcs';

export interface PartialHasherConfig {
	/** @default 2500 */
	batchSize?: number | null;
	ignoreMissingPatterns?: string[] | null;
	ignorePatterns?: string[] | null;
	/** @default 'accuracy' */
	optimization?: HasherOptimization | null;
	/** @default 'vcs' */
	walkStrategy?: HasherWalkStrategy | null;
	/** @default true */
	warnOnMissingInputs?: boolean | null;
}

export interface PartialNotifierConfig {
	webhookUrl?: string | null;
}

export interface PartialWorkspaceProjectsConfig {
	globs?: string[] | null;
	sources?: Record<string, string> | null;
}

export type PartialWorkspaceProjects =
	| PartialWorkspaceProjectsConfig
	| string[]
	| Record<string, string>;

export interface PartialRunnerConfig {
	archivableTargets?: string[] | null;
	/** @default '7 days' */
	cacheLifetime?: string | null;
	/** @default true */
	inheritColorsForPipedTasks?: boolean | null;
	logRunningCommand?: boolean | null;
}

export type VcsManager = 'git';

export type VcsProvider = 'bitbucket' | 'github' | 'gitlab' | 'other';

export interface PartialVcsConfig {
	/** @default 'master' */
	defaultBranch?: string | null;
	hooks?: Record<string, string[]> | null;
	/** @default 'git' */
	manager?: VcsManager | null;
	/** @default 'github' */
	provider?: VcsProvider | null;
	remoteCandidates?: string[] | null;
	syncHooks?: boolean | null;
}

/** Docs: https://moonrepo.dev/docs/config/workspace */
export interface PartialWorkspaceConfig {
	/** @default 'https://moonrepo.dev/schemas/workspace.json' */
	$schema?: string | null;
	codeowners?: PartialCodeownersConfig | null;
	constraints?: PartialConstraintsConfig | null;
	experiments?: PartialExperimentsConfig | null;
	extends?: string | null;
	generator?: PartialGeneratorConfig | null;
	hasher?: PartialHasherConfig | null;
	notifier?: PartialNotifierConfig | null;
	projects?: PartialWorkspaceProjects | null;
	runner?: PartialRunnerConfig | null;
	/** @default true */
	telemetry?: boolean | null;
	vcs?: PartialVcsConfig | null;
	versionConstraint?: string | null;
}

export interface CodeownersConfig {
	globalPaths: Record<string, string[]>;
	/** @default 'file-source' */
	orderBy: CodeownersOrderBy;
	syncOnRun: boolean;
}

export interface ConstraintsConfig {
	/** @default true */
	enforceProjectTypeRelationships: boolean;
	tagRelationships: Record<string, string[]>;
}

export interface ExperimentsConfig {
	/**
	 * @default true
	 * @deprecated
	 */
	interweavedTaskInheritance: boolean;
	/** @default true */
	strictProjectAliases: boolean;
	/**
	 * @default true
	 * @deprecated
	 */
	taskOutputBoundaries: boolean;
}

export interface GeneratorConfig {
	templates: string[];
}

export interface HasherConfig {
	/** @default 2500 */
	batchSize: number;
	ignoreMissingPatterns: string[];
	ignorePatterns: string[];
	/** @default 'accuracy' */
	optimization: HasherOptimization;
	/** @default 'vcs' */
	walkStrategy: HasherWalkStrategy;
	/** @default true */
	warnOnMissingInputs: boolean;
}

export interface NotifierConfig {
	webhookUrl: string | null;
}

export interface WorkspaceProjectsConfig {
	globs: string[];
	sources: Record<string, string>;
}

export type WorkspaceProjects = WorkspaceProjectsConfig | string[] | Record<string, string>;

export interface RunnerConfig {
	archivableTargets: string[];
	/** @default '7 days' */
	cacheLifetime: string;
	/** @default true */
	inheritColorsForPipedTasks: boolean;
	logRunningCommand: boolean;
}

export interface VcsConfig {
	/** @default 'master' */
	defaultBranch: string;
	hooks: Record<string, string[]>;
	/** @default 'git' */
	manager: VcsManager;
	/** @default 'github' */
	provider: VcsProvider;
	remoteCandidates: string[];
	syncHooks: boolean;
}

/** Docs: https://moonrepo.dev/docs/config/workspace */
export interface WorkspaceConfig {
	/** @default 'https://moonrepo.dev/schemas/workspace.json' */
	$schema: string;
	codeowners: CodeownersConfig;
	constraints: ConstraintsConfig;
	experiments: ExperimentsConfig;
	extends: string | null;
	generator: GeneratorConfig;
	hasher: HasherConfig;
	notifier: NotifierConfig;
	projects: WorkspaceProjects;
	runner: RunnerConfig;
	/** @default true */
	telemetry: boolean;
	vcs: VcsConfig;
	versionConstraint: string | null;
}
