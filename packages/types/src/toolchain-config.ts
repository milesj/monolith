// Automatically generated by schematic. DO NOT MODIFY!

/* eslint-disable */

export interface PartialDenoConfig {
	depsFile?: string | null;
	lockfile?: boolean | null;
}

export type NodeProjectAliasFormat = 'name-and-scope' | 'name-only';

export type NodeVersionFormat = 'file' | 'link' | 'star' | 'version' | 'version-caret' | 'version-tilde' | 'workspace' | 'workspace-caret' | 'workspace-tilde';

export interface PartialNpmConfig {
	version?: string | null;
}

export type NodePackageManager = 'npm' | 'pnpm' | 'yarn';

export interface PartialPnpmConfig {
	version?: string | null;
}

export type NodeVersionManager = 'nodenv' | 'nvm';

export interface PartialYarnConfig {
	plugins?: string[] | null;
	version?: string | null;
}

export interface PartialNodeConfig {
	addEnginesConstraint?: boolean | null;
	aliasPackageNames?: NodeProjectAliasFormat | null;
	binExecArgs?: string[] | null;
	dedupeOnLockfileChange?: boolean | null;
	dependencyVersionFormat?: NodeVersionFormat | null;
	inferTasksFromScripts?: boolean | null;
	npm?: PartialNpmConfig | null;
	packageManager?: NodePackageManager | null;
	pnpm?: PartialPnpmConfig | null;
	syncProjectWorkspaceDependencies?: boolean | null;
	syncVersionManagerConfig?: NodeVersionManager | null;
	version?: string | null;
	yarn?: PartialYarnConfig | null;
}

export interface PartialRustConfig {
	bins?: string[] | null;
	syncToolchainConfig?: boolean | null;
	version?: string | null;
}

export interface PartialTypeScriptConfig {
	createMissingConfig?: boolean | null;
	projectConfigFileName?: string | null;
	rootConfigFileName?: string | null;
	rootOptionsConfigFileName?: string | null;
	routeOutDirToCache?: boolean | null;
	syncProjectReferences?: boolean | null;
	syncProjectReferencesToPaths?: boolean | null;
}

export interface PartialToolchainConfig {
	$schema?: string | null;
	deno?: PartialDenoConfig | null;
	extends?: string | null;
	node?: PartialNodeConfig | null;
	rust?: PartialRustConfig | null;
	typescript?: PartialTypeScriptConfig | null;
}

export interface DenoConfig {
	depsFile: string;
	lockfile: boolean;
}

export interface NpmConfig {
	version: string | null;
}

export interface PnpmConfig {
	version: string | null;
}

export interface YarnConfig {
	plugins: string[];
	version: string | null;
}

export interface NodeConfig {
	addEnginesConstraint: boolean;
	aliasPackageNames: NodeProjectAliasFormat;
	binExecArgs: string[];
	dedupeOnLockfileChange: boolean;
	dependencyVersionFormat: NodeVersionFormat;
	inferTasksFromScripts: boolean;
	npm: NpmConfig;
	packageManager: NodePackageManager;
	pnpm: PnpmConfig | null;
	syncProjectWorkspaceDependencies: boolean;
	syncVersionManagerConfig: NodeVersionManager | null;
	version: string | null;
	yarn: YarnConfig | null;
}

export interface RustConfig {
	bins: string[];
	syncToolchainConfig: boolean;
	version: string | null;
}

export interface TypeScriptConfig {
	createMissingConfig: boolean;
	projectConfigFileName: string;
	rootConfigFileName: string;
	rootOptionsConfigFileName: string;
	routeOutDirToCache: boolean;
	syncProjectReferences: boolean;
	syncProjectReferencesToPaths: boolean;
}

export interface ToolchainConfig {
	$schema: string;
	deno: DenoConfig | null;
	extends: string | null;
	node: NodeConfig | null;
	rust: RustConfig | null;
	typescript: TypeScriptConfig | null;
}
