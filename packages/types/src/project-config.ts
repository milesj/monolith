// Automatically generated by schematic. DO NOT MODIFY!

/* eslint-disable */

import type { PartialTaskConfig, PlatformType, TaskConfig } from './tasks-config';

export type DependencyScope = 'build' | 'development' | 'peer' | 'production' | 'root';

export type DependencySource = 'explicit' | 'implicit';

export interface PartialDependencyConfig {
	id?: string | null;
	/** @default 'production' */
	scope?: DependencyScope | null;
	/** @default 'explicit' */
	source?: DependencySource | null;
	via?: string | null;
}

export type PartialProjectDependsOn = string | PartialDependencyConfig;

export type LanguageType =
	| 'bash'
	| 'batch'
	| 'go'
	| 'javascript'
	| 'php'
	| 'python'
	| 'ruby'
	| 'rust'
	| 'typescript'
	| 'unknown';

export type PartialOwnersPaths = string[] | Record<string, string[]>;

export interface PartialOwnersConfig {
	customGroups?: Record<string, string[]> | null;
	defaultOwner?: string | null;
	optional?: boolean | null;
	paths?: PartialOwnersPaths | null;
	/** @default 1 */
	requiredApprovals?: number | null;
}

export interface PartialProjectMetadataConfig {
	channel?: string | null;
	description?: string | null;
	maintainers?: string[] | null;
	name?: string | null;
	owner?: string | null;
}

export interface PartialProjectToolchainCommonToolConfig {
	version?: string | null;
}

export interface PartialProjectToolchainTypeScriptConfig {
	disabled?: boolean | null;
	includeProjectReferenceSources?: boolean | null;
	includeSharedTypes?: boolean | null;
	routeOutDirToCache?: boolean | null;
	syncProjectReferences?: boolean | null;
	syncProjectReferencesToPaths?: boolean | null;
}

export interface PartialProjectToolchainConfig {
	bun?: PartialProjectToolchainCommonToolConfig | null;
	deno?: PartialProjectToolchainCommonToolConfig | null;
	node?: PartialProjectToolchainCommonToolConfig | null;
	rust?: PartialProjectToolchainCommonToolConfig | null;
	typescript?: PartialProjectToolchainTypeScriptConfig | null;
}

export type ProjectType = 'application' | 'automation' | 'library' | 'tool' | 'unknown';

export interface PartialProjectWorkspaceInheritedTasksConfig {
	exclude?: string[] | null;
	include?: string[] | null;
	rename?: Record<string, string> | null;
}

export interface PartialProjectWorkspaceConfig {
	inheritedTasks?: PartialProjectWorkspaceInheritedTasksConfig | null;
}

/** Docs: https://moonrepo.dev/docs/config/project */
export interface PartialProjectConfig {
	/** @default 'https://moonrepo.dev/schemas/project.json' */
	$schema?: string | null;
	dependsOn?: PartialProjectDependsOn[] | null;
	env?: Record<string, string> | null;
	fileGroups?: Record<string, string[]> | null;
	id?: string | null;
	/** @default 'unknown' */
	language?: LanguageType | null;
	owners?: PartialOwnersConfig | null;
	/** @default 'unknown' */
	platform?: PlatformType | null;
	project?: PartialProjectMetadataConfig | null;
	tags?: string[] | null;
	tasks?: Record<string, PartialTaskConfig> | null;
	toolchain?: PartialProjectToolchainConfig | null;
	/** @default 'unknown' */
	type?: ProjectType | null;
	workspace?: PartialProjectWorkspaceConfig | null;
}

export interface DependencyConfig {
	id: string;
	/** @default 'production' */
	scope: DependencyScope;
	/** @default 'explicit' */
	source: DependencySource;
	via: string | null;
}

export type ProjectDependsOn = string | DependencyConfig;

export type OwnersPaths = string[] | Record<string, string[]>;

export interface OwnersConfig {
	customGroups: Record<string, string[]>;
	defaultOwner: string | null;
	optional: boolean;
	paths: OwnersPaths;
	/** @default 1 */
	requiredApprovals: number;
}

export interface ProjectMetadataConfig {
	channel: string | null;
	description: string;
	maintainers: string[];
	name: string | null;
	owner: string | null;
}

export interface ProjectToolchainCommonToolConfig {
	version: string | null;
}

export interface ProjectToolchainTypeScriptConfig {
	disabled: boolean;
	includeProjectReferenceSources: boolean | null;
	includeSharedTypes: boolean | null;
	routeOutDirToCache: boolean | null;
	syncProjectReferences: boolean | null;
	syncProjectReferencesToPaths: boolean | null;
}

export interface ProjectToolchainConfig {
	bun: ProjectToolchainCommonToolConfig | null;
	deno: ProjectToolchainCommonToolConfig | null;
	node: ProjectToolchainCommonToolConfig | null;
	rust: ProjectToolchainCommonToolConfig | null;
	typescript: ProjectToolchainTypeScriptConfig | null;
}

export interface ProjectWorkspaceInheritedTasksConfig {
	exclude: string[];
	include: string[] | null;
	rename: Record<string, string>;
}

export interface ProjectWorkspaceConfig {
	inheritedTasks: ProjectWorkspaceInheritedTasksConfig;
}

/** Docs: https://moonrepo.dev/docs/config/project */
export interface ProjectConfig {
	/** @default 'https://moonrepo.dev/schemas/project.json' */
	$schema: string;
	dependsOn: ProjectDependsOn[];
	env: Record<string, string>;
	fileGroups: Record<string, string[]>;
	id: string | null;
	/** @default 'unknown' */
	language: LanguageType;
	owners: OwnersConfig;
	/** @default 'unknown' */
	platform: PlatformType | null;
	project: ProjectMetadataConfig | null;
	tags: string[];
	tasks: Record<string, TaskConfig>;
	toolchain: ProjectToolchainConfig;
	/** @default 'unknown' */
	type: ProjectType;
	workspace: ProjectWorkspaceConfig;
}
