// Automatically generated by schematic. DO NOT MODIFY!

import type { Id, InputPath, LanguageType, PlatformType } from './common-config';
import type { OwnersPaths, ProjectDependsOn } from './common-fixes';
import type { TaskConfig } from './tasks-config';

export type DependencyScope = 'development' | 'peer' | 'production';

export type DependencySource = 'explicit' | 'implicit';

export type ProjectType = 'application' | 'library' | 'tool' | 'unknown';

export interface DependencyConfig {
	id: Id;
	scope: DependencyScope;
	source: DependencySource;
	via: string | null;
}

export interface PartialDependencyConfig {
	id?: Id | null;
	scope?: DependencyScope | null;
	source?: DependencySource | null;
	via?: string | null;
}

export interface ProjectMetadataConfig {
	name: string | null;
	description: string;
	owner: string | null;
	maintainers: string[];
	channel: string | null;
}

export interface PartialProjectMetadataConfig {
	name?: string | null;
	description?: string | null;
	owner?: string | null;
	maintainers?: string[] | null;
	channel?: string | null;
}

export interface OwnersConfig {
	customGroups: Record<string, string[]>;
	defaultOwner: string | null;
	optional: boolean;
	paths: OwnersPaths;
	requiredApprovals: number;
}

export interface PartialOwnersConfig {
	customGroups?: Record<string, string[]> | null;
	defaultOwner?: string | null;
	optional?: boolean | null;
	paths?: OwnersPaths | null;
	requiredApprovals?: number | null;
}

export interface ProjectToolchainCommonToolConfig {
	version: string | null;
}

export interface PartialProjectToolchainCommonToolConfig {
	version?: string | null;
}

export interface ProjectToolchainTypeScriptConfig {
	disabled: boolean;
	routeOutDirToCache: boolean | null;
	syncProjectReferences: boolean | null;
	syncProjectReferencesToPaths: boolean | null;
}

export interface PartialProjectToolchainTypeScriptConfig {
	disabled?: boolean | null;
	routeOutDirToCache?: boolean | null;
	syncProjectReferences?: boolean | null;
	syncProjectReferencesToPaths?: boolean | null;
}

export interface ProjectToolchainConfig {
	node: ProjectToolchainCommonToolConfig | null;
	rust: ProjectToolchainCommonToolConfig | null;
	typescript: ProjectToolchainTypeScriptConfig | null;
}

export interface PartialProjectToolchainConfig {
	node?: ProjectToolchainCommonToolConfig | null;
	rust?: ProjectToolchainCommonToolConfig | null;
	typescript?: ProjectToolchainTypeScriptConfig | null;
}

export interface ProjectWorkspaceInheritedTasksConfig {
	exclude: Id[];
	include: Id[] | null;
	rename: Record<Id, Id>;
}

export interface PartialProjectWorkspaceInheritedTasksConfig {
	exclude?: Id[] | null;
	include?: Id[] | null;
	rename?: Record<Id, Id> | null;
}

export interface ProjectWorkspaceConfig {
	inheritedTasks: ProjectWorkspaceInheritedTasksConfig;
}

export interface PartialProjectWorkspaceConfig {
	inheritedTasks?: ProjectWorkspaceInheritedTasksConfig | null;
}

export interface ProjectConfig {
	$schema: string;
	dependsOn: ProjectDependsOn[];
	env: Record<string, string>;
	fileGroups: Record<Id, InputPath[]>;
	language: LanguageType;
	owners: OwnersConfig;
	platform: PlatformType | null;
	project: ProjectMetadataConfig | null;
	tags: Id[];
	tasks: Record<Id, TaskConfig>;
	toolchain: ProjectToolchainConfig;
	type: ProjectType;
	workspace: ProjectWorkspaceConfig;
}

export interface PartialProjectConfig {
	$schema?: string | null;
	dependsOn?: ProjectDependsOn[] | null;
	env?: Record<string, string> | null;
	fileGroups?: Record<Id, InputPath[]> | null;
	language?: LanguageType | null;
	owners?: OwnersConfig | null;
	platform?: PlatformType | null;
	project?: ProjectMetadataConfig | null;
	tags?: Id[] | null;
	tasks?: Record<Id, TaskConfig> | null;
	toolchain?: ProjectToolchainConfig | null;
	type?: ProjectType | null;
	workspace?: ProjectWorkspaceConfig | null;
}
