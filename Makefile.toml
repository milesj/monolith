[config]
default_to_workspace = false
skip_core_tasks = true

[tasks.clean]
command = "cargo"
args = ["clean"]

# BUILDING

[tasks.build]
command = "cargo"
args = ["build"]

# FORMATTING

[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--all", "--", "--emit=files"]

# LINTING

[tasks.lint]
command = "cargo"
args = ["clippy", "--workspace", "--all-targets"]

# TESTING

[tasks.setup-test]
command = "cargo"
args = ["run", "--", "--log", "debug", "setup"]
cwd = "./tests/fixtures/cases"

[tasks.run-test]
command = "cargo"
args = ["test", "--workspace"]

[tasks.clean-test]
script = "rm -rf ./tests/fixtures/cases/.moon/cache"
condition = { platforms = ["mac", "linux"] }

[tasks.test]
run_task = { name = ["clean-test", "setup-test", "run-test", "clean-test"] }

[tasks.test-output]
command = "cargo"
args = ["test", "--workspace", "--", "--nocapture", "--show-output"]

# CODE COVERAGE

[tasks.test-coverage]
env = { RUSTFLAGS = "-Cinstrument-coverage", LLVM_PROFILE_FILE = "moon-%p-%m.profraw" }
run_task = { name = ["build", "test"] }

[tasks.generate-report]
command = "grcov"
args = [".", "-s", "./crates", "--binary-path", "./target/debug", "-t", "lcov", "--branch", "--ignore-not-existing", "-o", "./report.txt"]

[tasks.generate-html]
command = "grcov"
args = [".", "-s", "./crates", "--binary-path", "./target/debug", "-t", "html", "--branch", "--ignore-not-existing", "-o", "./coverage"]

[tasks.clean-profraw]
script = "rm -rf *.profraw crates/**/*.profraw tests/fixtures/**/*.profraw"

## OTHER

[tasks.json-schemas]
command = "cargo"
args = ["run", "-p", "moon_config"]

[tasks.check]
dependencies = [
    "format",
    "lint",
    "build",
    "test"
]

