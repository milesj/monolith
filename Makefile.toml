# env = { RUSTFLAGS = "--cfg tokio_unstable" }

[config]
default_to_workspace = false
skip_core_tasks = true

[tasks.clean]
command = "cargo"
args = ["clean"]

# BUILDING

[tasks.build]
command = "cargo"
args = ["build"]

# FORMATTING

[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--all", "--", "--emit=files"]

# LINTING

[tasks.lint]
command = "cargo"
args = ["clippy", "--workspace", "--all-targets"]

[tasks.lint-fix]
command = "cargo"
args = ["clippy", "--workspace", "--all-targets", "--fix", "--allow-dirty", "--allow-staged"]

# TESTING

[tasks.setup-test]
command = "cargo"
args = ["run", "--", "--log", "debug", "setup"]
env = { MOON_TEST = "true" }
cwd = "./tests/fixtures/cases"

[tasks.run-tests]
command = "cargo"
args = ["nextest", "run", "--workspace", "--config-file", "./.cargo/nextest.toml"]

[tasks.clean-test]
script = "rm -rf ./tests/fixtures/cases/.moon/cache"
condition = { platforms = ["mac", "linux"] }

[tasks.test]
run_task = { name = ["clean-test", "run-tests"] }

# CODE COVERAGE

[tasks.run-tests-with-coverage]
command = "cargo"
args = ["llvm-cov", "nextest", "--config-file", "./.cargo/nextest.toml"]

[tasks.test-coverage]
run_task = { name = ["clean-test", "run-tests-with-coverage"] }

[tasks.generate-report]
command = "cargo"
args = ["llvm-cov", "report", "--lcov", "--ignore-filename-regex", "error", "--output-path", "./report.txt"]

[tasks.generate-html]
command = "cargo"
args = ["llvm-cov", "report", "--html", "--ignore-filename-regex", "error", "--open"]

## OTHER

[tasks.json-schemas]
command = "cargo"
args = ["run", "-p", "moon_config"]

[tasks.check]
dependencies = [
    "format",
    "lint",
    "build",
    "test"
]

